{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/@repository/concrete/answer.repository.ts","webpack:///./src/@repository/concrete/base/repository.base.ts","webpack:///./src/@repository/concrete/comment.repository.ts","webpack:///./src/@repository/concrete/company-membership.repository.ts","webpack:///./src/@repository/concrete/company.repository.ts","webpack:///./src/@repository/concrete/index.ts","webpack:///./src/@repository/concrete/issue.repository.ts","webpack:///./src/@repository/concrete/membership-request.repository.ts","webpack:///./src/@repository/concrete/project-membership.repository.ts","webpack:///./src/@repository/concrete/project.repository.ts","webpack:///./src/@repository/concrete/question.repository.ts","webpack:///./src/@repository/concrete/status.repository.ts","webpack:///./src/@repository/concrete/task-assignment.repository.ts","webpack:///./src/@repository/concrete/task.repository.ts","webpack:///./src/@repository/concrete/user.repository.ts","webpack:///./src/_models/dtos/answer/answer-create.dto.ts","webpack:///./src/_models/dtos/answer/answer-detail.dto.ts","webpack:///./src/_models/dtos/answer/answer-list.dto.ts","webpack:///./src/_models/dtos/answer/answer-summary.dto.ts","webpack:///./src/_models/dtos/answer/answer-update.dto.ts","webpack:///./src/_models/dtos/comment/comment-create.dto.ts","webpack:///./src/_models/dtos/comment/comment-detail.dto.ts","webpack:///./src/_models/dtos/comment/comment-list.dto.ts","webpack:///./src/_models/dtos/comment/comment-summary.dto.ts","webpack:///./src/_models/dtos/comment/comment-update.dto.ts","webpack:///./src/_models/dtos/company/company-create.dto.ts","webpack:///./src/_models/dtos/company/company-detail.dto.ts","webpack:///./src/_models/dtos/company/company-list.dto.ts","webpack:///./src/_models/dtos/company/company-summary.dto.ts","webpack:///./src/_models/dtos/company/company-update.dto.ts","webpack:///./src/_models/dtos/company/company-user-register.dto.ts","webpack:///./src/_models/dtos/index.ts","webpack:///./src/_models/dtos/issue/issue-create.dto.ts","webpack:///./src/_models/dtos/issue/issue-detail.dto.ts","webpack:///./src/_models/dtos/issue/issue-list.dto.ts","webpack:///./src/_models/dtos/issue/issue-summary.dto.ts","webpack:///./src/_models/dtos/issue/issue-update.dto.ts","webpack:///./src/_models/dtos/project/project-assign-manager.dto.ts","webpack:///./src/_models/dtos/project/project-create.dto.ts","webpack:///./src/_models/dtos/project/project-detail.dto.ts","webpack:///./src/_models/dtos/project/project-list.dto.ts","webpack:///./src/_models/dtos/project/project-summary.dto.ts","webpack:///./src/_models/dtos/project/project-update.dto.ts","webpack:///./src/_models/dtos/project/project-user-register.dto.ts","webpack:///./src/_models/dtos/question/question-create.dto.ts","webpack:///./src/_models/dtos/question/question-detail.dto.ts","webpack:///./src/_models/dtos/question/question-list.dto.ts","webpack:///./src/_models/dtos/question/question-summary.dto.ts","webpack:///./src/_models/dtos/question/question-update.dto.ts","webpack:///./src/_models/dtos/status/status-summary.dto.ts","webpack:///./src/_models/dtos/task/task-create.dto.ts","webpack:///./src/_models/dtos/task/task-detail.dto.ts","webpack:///./src/_models/dtos/task/task-list.dto.ts","webpack:///./src/_models/dtos/task/task-status-update.dto.ts","webpack:///./src/_models/dtos/task/task-summary.dto.ts","webpack:///./src/_models/dtos/task/task-update.dto.ts","webpack:///./src/_models/dtos/user/login.dto.model.ts","webpack:///./src/_models/dtos/user/register.dto.ts","webpack:///./src/_models/dtos/user/user-summary.dto.ts","webpack:///./src/common/app-config.ts","webpack:///./src/entities/answer.entity.ts","webpack:///./src/entities/comment.entity.ts","webpack:///./src/entities/company-membership.entity.ts","webpack:///./src/entities/company.entity.ts","webpack:///./src/entities/issue.entity.ts","webpack:///./src/entities/label.entity.ts","webpack:///./src/entities/membership-request.entity.ts","webpack:///./src/entities/project-manager.entity.ts","webpack:///./src/entities/project-membership.entity.ts","webpack:///./src/entities/project.entity.ts","webpack:///./src/entities/question.entity.ts","webpack:///./src/entities/status.entity.ts","webpack:///./src/entities/task-assignment.entity.ts","webpack:///./src/entities/task-label.entity.ts","webpack:///./src/entities/task.entity.ts","webpack:///./src/entities/user.entity.ts","webpack:///./src/enums/base-status.enum.ts","webpack:///./src/enums/task-types.enum.ts","webpack:///./src/seed/container.ts","webpack:///./src/seed/index.ts","webpack:///./src/seed/inject-types.ts","webpack:///./src/seed/seed.ts","webpack:///external \"class-validator\"","webpack:///external \"faker\"","webpack:///external \"inversify\"","webpack:///external \"module-alias/register\"","webpack:///external \"reflect-metadata\"","webpack:///external \"typeorm\""],"names":[],"mappings":"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","file":"seed.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/seed/index.ts\");\n","import { RepositoryBase } from './base/repository.base';\r\nimport { getManager } from \"typeorm\";\r\nimport { IAnswerRepository } from \"../abstract/i-answer.repository\";\r\nimport { AnswerEntity } from \"./../../entities/answer.entity\";\r\nimport { injectable } from \"inversify\";\r\nimport 'reflect-metadata';\r\n@injectable()\r\nexport class AnswerRepository extends RepositoryBase<AnswerEntity> implements IAnswerRepository {\r\n    constructor() {\r\n        super(\r\n            AnswerEntity\r\n        );\r\n    }\r\n}","import { IRepositoryBase } from './../../abstract/base/i-repository.base';\r\nimport { getManager, FindManyOptions, FindOneOptions, EntityManager } from 'typeorm';\r\nimport { unmanaged, injectable } from 'inversify';\r\n\r\nexport type ObjectType<T> = { new(): T } | Function;\r\n@injectable()\r\nexport class RepositoryBase<T> implements IRepositoryBase<T> {\r\n    private type: ObjectType<T>;\r\n    constructor(@unmanaged() type: ObjectType<T>) {\r\n        this.type = type;\r\n    }\r\n\r\n    list(options: FindManyOptions<T>): Promise<T[]> {\r\n        return getManager().getRepository(this.type).find(options);\r\n    }\r\n    findById(id: number): Promise<T> {\r\n        return getManager().getRepository(this.type).findOne(id);\r\n    }\r\n\r\n    findOne(id: number, options: FindOneOptions<T>): Promise<T> {\r\n        if (id !== null)\r\n            return getManager().getRepository(this.type).findOne(id, options);\r\n        else\r\n            return getManager().getRepository(this.type).findOne(options);\r\n    }\r\n\r\n    insert(model: T, manager: EntityManager = getManager()): Promise<T> {\r\n        return manager.getRepository(this.type).save(model);\r\n    }\r\n\r\n    update(id: number, model: T, manager: EntityManager = getManager()): Promise<any> {\r\n        return manager.getRepository(this.type).update(id, model);\r\n\r\n    }\r\n    delete(id: number, manager: EntityManager = getManager()): Promise<any> {\r\n        return manager.getRepository(this.type).delete(id);\r\n    }\r\n}\r\n","import { getManager } from \"typeorm\";\r\nimport { ICommentRepository } from \"../abstract/i-comment.repository\";\r\nimport { CommentEntity } from \"./../../entities/comment.entity\";\r\nimport { injectable } from \"inversify\";\r\nimport 'reflect-metadata';\r\nimport { RepositoryBase } from \"./base/repository.base\";\r\n@injectable()\r\nexport class CommentRepository extends RepositoryBase<CommentEntity> implements ICommentRepository {\r\n    constructor() {\r\n        super(\r\n            CommentEntity\r\n        );\r\n    }\r\n}","import { injectable } from \"inversify\";\r\nimport 'reflect-metadata';\r\nimport { RepositoryBase } from \"./base/repository.base\";\r\nimport { CompanyMembershipEntity } from \"@entities/company-membership.entity\";\r\nimport { ICompanyMembershipRepository } from \"@repositories/abstract\";\r\n@injectable()\r\nexport class CompanyMembershipRepository extends RepositoryBase<CompanyMembershipEntity> implements ICompanyMembershipRepository {\r\n    constructor() {\r\n        super(\r\n            CompanyMembershipEntity\r\n        );\r\n    }\r\n}\r\n","import { RepositoryBase } from './base/repository.base';\r\nimport { getManager } from \"typeorm\";\r\nimport { ICompanyRepository } from \"../abstract/i-company.repository\";\r\nimport { CompanyEntity } from \"./../../entities/company.entity\";\r\nimport { injectable } from \"inversify\";\r\nimport 'reflect-metadata';\r\nimport { CompanyFilter } from '@models/filters';\r\n@injectable()\r\nexport class CompanyRepository extends RepositoryBase<CompanyEntity> implements ICompanyRepository {\r\n    constructor() {\r\n        super(\r\n            CompanyEntity\r\n        );\r\n    }\r\n\r\n    listByFiltersAndUser(filters: CompanyFilter, userId: number): Promise<CompanyEntity[]> {\r\n        let query = getManager().createQueryBuilder(CompanyEntity, \"company\").select(\"company\")\r\n            .leftJoin(\"company.owner\", \"owner\").addSelect([\"owner.id\", \"owner.name\", \"owner.surname\", \"owner.username\"])\r\n            .where(\"owner.id =:userId\", { userId: userId })\r\n            .leftJoinAndSelect(\"company.members\", \"member\")\r\n            .leftJoin(\"member.user\", \"user\").addSelect([\"user.id\", \"user.name\", \"user.surname\", \"user.username\"])\r\n            .leftJoin(\"company.projects\", \"project\").addSelect([\"project.id\"]);\r\n        if (filters.owner === undefined) query = query.orWhere(\"user.id =:userId\", { userId: userId });\r\n\r\n        query = query.orderBy(\"company.id\", \"DESC\");\r\n        if (filters.take !== undefined) {\r\n            query = query.take(filters.take);\r\n            if (filters.skip !== undefined) query = query.skip(filters.skip);\r\n        }\r\n        return query.getMany();\r\n    }\r\n\r\n    findForDetails(id: number): Promise<CompanyEntity> {\r\n        let query = getManager().createQueryBuilder(CompanyEntity, \"company\").select(\"company\")\r\n            .where(\"company.id =:id\", { id: id })\r\n            .leftJoin(\"company.owner\", \"owner\").addSelect([\"owner.id\", \"owner.name\", \"owner.surname\", \"owner.username\"])\r\n            .leftJoinAndSelect(\"company.members\", \"member\")\r\n            .leftJoin(\"member.user\", \"user\").addSelect([\"user.id\", \"user.name\", \"user.surname\", \"user.username\"])\r\n            .leftJoin(\"company.projects\", \"project\").addSelect([\"project.id\"]);\r\n\r\n        return query.getOne();\r\n    }\r\n\r\n    insertMembershipRequest(companyId: number, userId: number): Promise<void> {\r\n        let query = getManager().createQueryBuilder().relation(CompanyEntity, \"requestedUsers\").of(companyId).add(userId);\r\n\r\n        return query;\r\n    }\r\n\r\n    insertMember(companyId: number, userId: number): Promise<void> {\r\n        let query = getManager().createQueryBuilder().relation(CompanyEntity, \"users\").of(companyId).add(userId);\r\n\r\n        return query;\r\n    }\r\n}\r\n","export { QuestionRepository } from './question.repository';\r\nexport { IssueRepository } from './issue.repository';\r\nexport { AnswerRepository } from './answer.repository';\r\nexport { StatusRepository } from './status.repository';\r\nexport { ProjectRepository } from './project.repository';\r\nexport { CompanyRepository } from './company.repository';\r\nexport { UserRepository } from './user.repository';\r\nexport { CommentRepository } from './comment.repository';\r\nexport { TaskAssignmentRepository } from './task-assignment.repository';\r\nexport { TaskRepository } from './task.repository';\r\nexport { CompanyMembershipRepository } from './company-membership.repository';\r\nexport { MembershipRequestRepository } from './membership-request.repository';\r\nexport { ProjectMembershipRepository } from './project-membership.repository';\r\n","import { getManager } from \"typeorm\";\r\nimport { IIssueRepository } from \"../abstract/i-issue.repository\";\r\nimport { IssueEntity } from \"./../../entities/issue.entity\";\r\nimport { injectable } from \"inversify\";\r\nimport 'reflect-metadata';\r\nimport { RepositoryBase } from \"./base/repository.base\";\r\n@injectable()\r\nexport class IssueRepository extends RepositoryBase<IssueEntity> implements IIssueRepository {\r\n    constructor() {\r\n        super(\r\n            IssueEntity\r\n        );\r\n    }\r\n}","import { injectable } from \"inversify\";\r\nimport 'reflect-metadata';\r\nimport { RepositoryBase } from \"./base/repository.base\";\r\nimport { IMembershipRequestRepository } from \"@repositories/abstract\";\r\nimport { MembershipRequestEntity } from \"@entities/membership-request.entity\";\r\n@injectable()\r\nexport class MembershipRequestRepository extends RepositoryBase<MembershipRequestEntity> implements IMembershipRequestRepository {\r\n    constructor() {\r\n        super(\r\n            MembershipRequestEntity\r\n        );\r\n    }\r\n}\r\n","import { RepositoryBase } from './base/repository.base';\r\nimport { IProjectMembershipRepository } from \"../abstract/i-project-membership.repository\";\r\nimport { ProjectMembershipEntity } from \"./../../entities/project-membership.entity\";\r\nimport { injectable } from \"inversify\";\r\nimport 'reflect-metadata';\r\n@injectable()\r\nexport class ProjectMembershipRepository extends RepositoryBase<ProjectMembershipEntity> implements IProjectMembershipRepository {\r\n    constructor() {\r\n        super(\r\n            ProjectMembershipEntity\r\n        );\r\n    }\r\n}\r\n","import { RepositoryBase } from './base/repository.base';\r\nimport { getManager } from \"typeorm\";\r\nimport { IProjectRepository } from \"../abstract/i-project.repository\";\r\nimport { ProjectEntity } from \"./../../entities/project.entity\";\r\nimport { injectable } from \"inversify\";\r\nimport 'reflect-metadata';\r\nimport { ProjectFilter } from '@models/filters';\r\n@injectable()\r\nexport class ProjectRepository extends RepositoryBase<ProjectEntity> implements IProjectRepository {\r\n    constructor() {\r\n        super(\r\n            ProjectEntity\r\n        );\r\n    }\r\n\r\n    listByFiltersByCompany(filters: ProjectFilter, companyId: number): Promise<ProjectEntity[]> {\r\n        let query = getManager().createQueryBuilder(ProjectEntity, \"project\")\r\n            .leftJoinAndSelect(\"project.managers\", \"manager\")\r\n            .where(\"project.companyId =:companyId\", { companyId: companyId })\r\n        query = query.orderBy(\"project.id\", \"DESC\");\r\n        if (filters.take !== undefined) {\r\n            query = query.take(filters.take);\r\n            if (filters.skip !== undefined) query = query.skip(filters.skip);\r\n        }\r\n        return query.orderBy(\"project.id\", \"DESC\").getMany();\r\n    }\r\n\r\n    findForDetails(id: number): Promise<ProjectEntity> {\r\n        let query = getManager().createQueryBuilder(ProjectEntity, \"project\").select([\"project.id\", \"project.title\", \"project.description\"])\r\n            .where(\"project.id =:id\", { id: id })\r\n            .leftJoin(\"project.company\", \"company\").addSelect([\"company.id\", \"company.name\", \"company.description\"])\r\n            .leftJoin(\"company.owner\", \"companyOwner\").addSelect([\"companyOwner.id\", \"companyOwner.name\", \"companyOwner.surname\", \"companyOwner.username\"])\r\n            .leftJoin(\"project.creator\", \"creator\").addSelect([\"creator.id\", \"creator.name\", \"creator.surname\", \"creator.username\"])\r\n            .leftJoinAndSelect(\"project.statuses\", \"status\")\r\n        return query.getOne();\r\n    }\r\n}\r\n","import { RepositoryBase } from './base/repository.base';\r\nimport { getManager } from \"typeorm\";\r\nimport { IQuestionRepository } from \"../abstract/i-question.repository\";\r\nimport { QuestionEntity } from \"./../../entities/question.entity\";\r\nimport { injectable } from \"inversify\";\r\nimport 'reflect-metadata';\r\n@injectable()\r\nexport class QuestionRepository extends RepositoryBase<QuestionEntity> implements IQuestionRepository {\r\n    constructor() {\r\n        super(\r\n            QuestionEntity\r\n        );\r\n    }\r\n}","import { RepositoryBase } from './base/repository.base';\r\nimport { getManager } from \"typeorm\";\r\nimport { IStatusRepository } from \"../abstract/i-status.repository\";\r\nimport { StatusEntity } from \"./../../entities/status.entity\";\r\nimport { injectable } from \"inversify\";\r\nimport 'reflect-metadata';\r\n@injectable()\r\nexport class StatusRepository extends RepositoryBase<StatusEntity> implements IStatusRepository {\r\n    constructor() {\r\n        super(\r\n            StatusEntity\r\n        );\r\n    }\r\n}","import { RepositoryBase } from './base/repository.base';\r\nimport { ITaskAssignmentRepository } from \"../abstract/i-task-assignment.repository\";\r\nimport { TaskAssignmentEntity } from \"./../../entities/task-assignment.entity\";\r\nimport { injectable } from \"inversify\";\r\nimport 'reflect-metadata';\r\n@injectable()\r\nexport class TaskAssignmentRepository extends RepositoryBase<TaskAssignmentEntity> implements ITaskAssignmentRepository {\r\n    constructor() {\r\n        super(\r\n            TaskAssignmentEntity\r\n        );\r\n    }\r\n}\r\n","import { RepositoryBase } from './base/repository.base';\r\nimport { ITaskRepository } from \"../abstract/i-task.repository\";\r\nimport { TaskEntity } from \"./../../entities/task.entity\";\r\nimport { injectable } from \"inversify\";\r\nimport 'reflect-metadata';\r\nimport { getManager } from 'typeorm';\r\nimport { TaskFilter } from '@models/filters/task-filter';\r\n@injectable()\r\nexport class TaskRepository extends RepositoryBase<TaskEntity> implements ITaskRepository {\r\n    constructor() {\r\n        super(\r\n            TaskEntity\r\n        );\r\n    }\r\n\r\n    listByFilters(filters: TaskFilter): Promise<TaskEntity[]> {\r\n        let query = getManager().createQueryBuilder(TaskEntity, \"task\")\r\n            .leftJoinAndSelect(\"task.assignees\", \"assignee\");\r\n\r\n        if (filters.assignedTo !== undefined) query = query.andWhere(\"assignee.id =:id\", { id: filters.assignedTo });\r\n        if (filters.projectId !== undefined) query = query.andWhere(\"projectId =:projectId\", { projectId: filters.projectId });\r\n        if (filters.createdBy !== undefined) query = query.andWhere(\"creatorId =:creatorId\", { creatorId: filters.createdBy });\r\n        if (filters.status !== undefined) query = query.andWhere(\"statusId =:statusId\", { statusId: filters.status });\r\n\r\n        query = query.orderBy(\"task.id\", \"DESC\");\r\n        if (filters.take !== undefined) {\r\n            query = query.take(filters.take);\r\n            if (filters.skip !== undefined) query = query.skip(filters.skip);\r\n        }\r\n        query = query.leftJoin(\"task.comments\", \"comment\").addSelect([\"comment.id\"])\r\n        return query.orderBy(\"task.id\", \"DESC\").getMany();\r\n    }\r\n\r\n    findForDetails(id: number): Promise<TaskEntity> {\r\n        let query = getManager().createQueryBuilder(TaskEntity, \"task\").select([\"task.id\", \"task.title\", \"task.description\"])\r\n            .where(\"task.id =:id\", { id: id })\r\n            .innerJoin(\"task.creator\", \"creator\").addSelect([\"creator.id\", \"creator.name\", \"creator.surname\", \"creator.username\"])\r\n            .leftJoinAndSelect(\"task.assignees\", \"assignment\")\r\n            .leftJoin(\"assignment.user\",\"assignee\").addSelect([\"assignee.id\", \"assignee.name\", \"assignee.surname\", \"assignee.username\"])\r\n            .leftJoin(\"task.comments\", \"comment\").addSelect([\"comment.id\", \"comment.content\", \"comment.taskId\"])\r\n            .leftJoin(\"comment.creator\", \"commentCreator\").addSelect([\"commentCreator.id\", \"commentCreator.name\", \"commentCreator.surname\", \"commentCreator.username\"])\r\n            .leftJoin(\"task.fromIssue\", \"fromIssue\").addSelect([\"fromIssue.id\", \"fromIssue.title\", \"fromIssue.description\"])\r\n            .leftJoin(\"task.project\", \"project\").addSelect([\"project.id\", \"project.title\", \"project.description\"])\r\n            .leftJoin(\"project.creator\", \"projectCreator\").addSelect([\"projectCreator.id\", \"projectCreator.name\", \"projectCreator.surname\", \"projectCreator.username\"])\r\n            .leftJoin(\"task.status\", \"status\").addSelect([\"status.id\", \"status.title\", \"status.description\"])\r\n\r\n        return query.getOne();\r\n    }\r\n\r\n}\r\n","import { getManager } from \"typeorm\";\r\nimport { IUserRepository } from \"../abstract/i-user.repository\";\r\nimport { UserEntity } from \"./../../entities/user.entity\";\r\nimport { injectable } from \"inversify\";\r\nimport { RepositoryBase } from \"./base/repository.base\";\r\n@injectable()\r\nexport class UserRepository extends RepositoryBase<UserEntity> implements IUserRepository {\r\n    constructor() {\r\n        super(\r\n            UserEntity\r\n        );\r\n    }\r\n    findByLogin(email: string, password: string) {\r\n        return getManager().getRepository(UserEntity).findOne({ email: email, password: password })\r\n    }\r\n\r\n}\r\n","import { IsString, IsNotEmpty } from 'class-validator';\r\n\r\nexport class AnswerCreateDto {\r\n\r\n    @IsString()\r\n    public content: string;\r\n\r\n    @IsNotEmpty()\r\n    public questionId: number;\r\n\r\n    public creatorId: number;\r\n\r\n}\r\n","import { UserSummaryDto } from \"..\";\r\n\r\nexport class AnswerDetailDto {\r\n    id: number;\r\n    content: string;\r\n    questionId:number;\r\n    creator: UserSummaryDto;\r\n}\r\n","import { UserSummaryDto } from \"..\";\r\n\r\nexport class AnswerListDto {\r\n    id: number;\r\n    content: string;\r\n    questionId:number;\r\n    creator: UserSummaryDto;\r\n}\r\n","import { UserSummaryDto } from \"..\";\r\n\r\nexport class AnswerSummaryDto {\r\n    id: number;\r\n    content: string;\r\n    questionId:number;\r\n    creator: UserSummaryDto;\r\n}\r\n","import { IsString } from 'class-validator';\r\n\r\nexport class AnswerUpdateDto {\r\n\r\n    @IsString()\r\n    public content: string;\r\n\r\n}\r\n","import { IsString, IsNotEmpty } from 'class-validator';\r\n\r\nexport class CommentCreateDto {\r\n\r\n    @IsString()\r\n    public content: string;\r\n\r\n    @IsNotEmpty()\r\n    public taskId: number;\r\n\r\n    public userId: number;\r\n\r\n}\r\n","import { UserSummaryDto } from \"..\";\r\n\r\nexport class CommentDetailDto {\r\n    id: number;\r\n    content: string;\r\n    taskId: number;\r\n    creator: UserSummaryDto;\r\n}\r\n","import { UserSummaryDto } from \"..\";\r\n\r\nexport class CommentListDto {\r\n    id: number;\r\n    content: string;\r\n    taskId: number;\r\n    creator: UserSummaryDto;\r\n}\r\n","import { UserSummaryDto } from \"..\";\r\n\r\nexport class CommentSummaryDto {\r\n    id: number;\r\n    content: string;\r\n    taskId: number;\r\n    creator: UserSummaryDto;\r\n}\r\n","import { IsString } from 'class-validator';\r\n\r\nexport class CommentUpdateDto {\r\n\r\n    @IsString()\r\n    public content: string;\r\n}\r\n","import { IsString } from 'class-validator';\r\n\r\nexport class CompanyCreateDto {\r\n\r\n    @IsString()\r\n    public name: string;\r\n\r\n    @IsString()\r\n    public description: string;\r\n\r\n    public ownerId: number;\r\n\r\n}\r\n","import { UserSummaryDto } from \"@models/dtos\";\r\n\r\nexport class CompanyDetailDto {\r\n    id: number;\r\n    name: string;\r\n    description: string;\r\n    owner: UserSummaryDto;\r\n    userCount: number = 0;\r\n    projectCount: number = 0;\r\n}\r\n","import { UserSummaryDto } from \"@models/dtos\";\r\n\r\nexport class CompanyListDto {\r\n    id: number;\r\n    name: string;\r\n    description: string;\r\n    owner: UserSummaryDto;\r\n    userCount: number = 0;\r\n    projectCount: number = 0;\r\n}\r\n","import { UserSummaryDto } from \"..\";\r\n\r\nexport class CompanySummaryDto {\r\n    id: number;\r\n    name: string;\r\n    description: string;\r\n    owner: UserSummaryDto;\r\n}\r\n","import { IsString } from 'class-validator';\r\n\r\nexport class CompanyUpdateDto {\r\n\r\n    @IsString()\r\n    public name: string;\r\n\r\n    @IsString()\r\n    public description: string;\r\n\r\n}\r\n","import { IsNumber } from \"class-validator\";\r\n\r\nexport class CompanyUserRegisterDto {\r\n\r\n    @IsNumber()\r\n    userId: number;\r\n}\r\n","\r\nexport { AnswerUpdateDto } from './answer/answer-update.dto';\r\nexport { AnswerCreateDto } from './answer/answer-create.dto';\r\nexport { AnswerDetailDto } from './answer/answer-detail.dto';\r\nexport { AnswerListDto } from './answer/answer-list.dto';\r\nexport { AnswerSummaryDto } from './answer/answer-summary.dto';\r\n\r\nexport { CommentUpdateDto } from './comment/comment-update.dto';\r\nexport { CommentCreateDto } from './comment/comment-create.dto';\r\nexport { CommentDetailDto } from './comment/comment-detail.dto';\r\nexport { CommentListDto } from './comment/comment-list.dto';\r\nexport { CommentSummaryDto } from './comment/comment-summary.dto';\r\n\r\nexport { TaskUpdateDto } from './task/task-update.dto';\r\nexport { TaskCreateDto } from './task/task-create.dto';\r\nexport { TaskDetailDto } from './task/task-detail.dto';\r\nexport { TaskListDto } from './task/task-list.dto';\r\nexport { TaskSummaryDto } from './task/task-summary.dto';\r\nexport { TaskStatusUpdateDto } from './task/task-status-update.dto';\r\n\r\nexport { CompanyUpdateDto } from './company/company-update.dto';\r\nexport { CompanyCreateDto } from './company/company-create.dto';\r\nexport { CompanyDetailDto } from './company/company-detail.dto';\r\nexport { CompanyListDto } from './company/company-list.dto';\r\nexport { CompanySummaryDto } from './company/company-summary.dto';\r\nexport { CompanyUserRegisterDto } from './company/company-user-register.dto';\r\n\r\nexport { IssueUpdateDto } from './issue/issue-update.dto';\r\nexport { IssueCreateDto } from './issue/issue-create.dto';\r\nexport { IssueDetailDto } from './issue/issue-detail.dto';\r\nexport { IssueListDto } from './issue/issue-list.dto';\r\nexport { IssueSummaryDto} from './issue/issue-summary.dto';\r\n\r\nexport { ProjectUpdateDto } from './project/project-update.dto';\r\nexport { ProjectCreateDto } from './project/project-create.dto';\r\nexport { ProjectDetailDto } from './project/project-detail.dto';\r\nexport { ProjectListDto } from './project/project-list.dto';\r\nexport { ProjectSummaryDto} from './project/project-summary.dto';\r\nexport { ProjectAssignManagerDto } from './project/project-assign-manager.dto';\r\nexport { ProjectUserRegisterDto } from './project/project-user-register.dto';\r\n\r\nexport { QuestionUpdateDto } from './question/question-update.dto';\r\nexport { QuestionCreateDto } from './question/question-create.dto';\r\nexport { QuestionDetailDto } from './question/question-detail.dto';\r\nexport { QuestionListDto } from './question/question-list.dto';\r\nexport { QuestionSummaryDto } from './question/question-summary.dto';\r\n\r\n\r\nexport { LoginDto } from './user/login.dto.model';\r\nexport { RegisterDto } from './user/register.dto';\r\nexport { UserSummaryDto } from './user/user-summary.dto';\r\n\r\nexport { StatusSummaryDto } from './status/status-summary.dto';\r\n","import { IsString, IsInt, IsNotEmpty, IsNumber } from 'class-validator';\r\n\r\nexport class IssueCreateDto {\r\n\r\n    @IsString()\r\n    public title: string;\r\n\r\n    @IsString()\r\n    public description: string;\r\n\r\n    @IsNotEmpty()\r\n    public projectId: number;\r\n\r\n    public creatorId: number;\r\n\r\n}","import { UserSummaryDto } from \"..\";\r\nimport { TaskSummaryDto } from \"../task/task-summary.dto\";\r\n\r\nexport class IssueDetailDto {\r\n    id: number;\r\n    title: string;\r\n    description: string;\r\n    tasks: TaskSummaryDto;\r\n    creator: UserSummaryDto;\r\n    //TODO yorumlar\r\n}\r\n","import { UserSummaryDto } from \"..\";\r\n\r\nexport class IssueListDto {\r\n    id: number;\r\n    title: string;\r\n    description: string;\r\n    creator: UserSummaryDto;\r\n    commentCount: number = 0;\r\n}\r\n","import { UserSummaryDto } from \"..\";\r\n\r\nexport class IssueSummaryDto {\r\n    id: number;\r\n    title: string;\r\n    description: string;\r\n    creator: UserSummaryDto;\r\n}\r\n","import { IsString } from 'class-validator';\r\n\r\nexport class IssueUpdateDto {\r\n\r\n    @IsString()\r\n    public title: string;\r\n\r\n    @IsString()\r\n    public description: string;\r\n\r\n}\r\n","import { IsNumber } from \"class-validator\";\r\n\r\nexport class ProjectAssignManagerDto {\r\n\r\n    @IsNumber()\r\n    userId: number;\r\n}\r\n","import { IsString, IsInt, IsNotEmpty, IsNumber } from 'class-validator';\r\n\r\nexport class ProjectCreateDto {\r\n\r\n    @IsString()\r\n    public title: string;\r\n\r\n    @IsString()\r\n    public description: string;\r\n\r\n    @IsNumber()\r\n    public companyId: number;\r\n\r\n    public userId: number;\r\n\r\n}","import { UserSummaryDto } from \"..\";\r\nimport { CompanySummaryDto } from \"../company/company-summary.dto\";\r\n\r\nexport class ProjectDetailDto {\r\n    id: number;\r\n    title: string;\r\n    description: string;\r\n    company: CompanySummaryDto;\r\n    creator: UserSummaryDto;\r\n    userCount: number;\r\n    taskCount: number;\r\n    issueCount: number;\r\n}\r\n","import { UserSummaryDto } from \"..\";\r\nimport { CompanySummaryDto } from \"../company/company-summary.dto\";\r\n\r\nexport class ProjectListDto {\r\n    id: number;\r\n    title: string;\r\n    description: string;\r\n    company: CompanySummaryDto;\r\n    creator: UserSummaryDto;\r\n    userCount: number;\r\n    taskCount: number;\r\n    issueCount: number;\r\n}\r\n","import { UserSummaryDto } from \"..\";\r\n\r\nexport class ProjectSummaryDto {\r\n    id: number;\r\n    title: string;\r\n    description: string;\r\n    creator: UserSummaryDto;\r\n}\r\n","import { IsString } from 'class-validator';\r\n\r\nexport class ProjectUpdateDto {\r\n\r\n    @IsString()\r\n    public title: string;\r\n\r\n    @IsString()\r\n    public description: string;\r\n\r\n}\r\n","import { IsNumber } from \"class-validator\";\r\n\r\nexport class ProjectUserRegisterDto {\r\n    @IsNumber()\r\n    userId: number;\r\n}\r\n","import { IsString, IsNotEmpty } from 'class-validator';\r\n\r\nexport class QuestionCreateDto {\r\n\r\n    @IsString()\r\n    public title: string;\r\n\r\n    @IsString()\r\n    public content: string;\r\n\r\n    @IsNotEmpty()\r\n    public projectId: number;\r\n\r\n    public creatorId: number;\r\n\r\n}\r\n","import { UserSummaryDto } from \"..\";\r\n\r\nexport class QuestionDetailDto {\r\n    id: number;\r\n    title: string;\r\n    content: string;\r\n    creator: UserSummaryDto;\r\n    answerCount: number;\r\n    projectId: number;\r\n}\r\n","import { UserSummaryDto } from \"..\";\r\n\r\nexport class QuestionListDto {\r\n    id: number;\r\n    title: string;\r\n    content: string;\r\n    creator: UserSummaryDto;\r\n    answerCount: number;\r\n    projectId: number;\r\n}\r\n","import { UserSummaryDto } from \"..\";\r\n\r\nexport class QuestionSummaryDto {\r\n    id: number;\r\n    title: string;\r\n    content: string;\r\n    creator: UserSummaryDto;\r\n    answerCount: number;\r\n    projectId: number;\r\n}\r\n","import { IsString } from 'class-validator';\r\n\r\nexport class QuestionUpdateDto {\r\n\r\n    @IsString()\r\n    public title: string;\r\n\r\n    @IsString()\r\n    public content: string;\r\n\r\n}\r\n","export class StatusSummaryDto {\r\n    id: number;\r\n    title: string;\r\n    description: string;\r\n}\r\n","import { IsString, IsInt, IsNotEmpty, IsNumber, IsOptional } from 'class-validator';\r\n\r\nexport class TaskCreateDto {\r\n\r\n  @IsString()\r\n  public title: string;\r\n\r\n  @IsString()\r\n  public description: string;\r\n\r\n  @IsNotEmpty()\r\n  public projectId: number;\r\n\r\n  @IsNotEmpty()\r\n  public statusId: number;\r\n\r\n  @IsNumber()\r\n  @IsOptional()\r\n  public fromIssueId: number;\r\n\r\n  public creatorId: number;\r\n\r\n  public assignees: number[];\r\n\r\n\r\n}\r\n","import { UserSummaryDto, CommentSummaryDto, ProjectSummaryDto, StatusSummaryDto, IssueSummaryDto } from \"@models/dtos\";\r\n\r\nexport class TaskDetailDto {\r\n    id: number;\r\n    title: string;\r\n    description: string;\r\n    creator: UserSummaryDto;\r\n    comments: CommentSummaryDto[] = [];\r\n    project: ProjectSummaryDto;\r\n    status: StatusSummaryDto;\r\n    fromIssue: IssueSummaryDto;\r\n    assignees: UserSummaryDto[] = [];\r\n    commentCount: number = 0;\r\n}\r\n","import { UserSummaryDto, StatusSummaryDto, ProjectSummaryDto } from \"..\";\r\n\r\nexport class TaskListDto {\r\n    id: number;\r\n    title: string;\r\n    description: string;\r\n    creator: UserSummaryDto;\r\n    commentCount: number;\r\n    project: ProjectSummaryDto;\r\n    status: StatusSummaryDto;\r\n    assignees: UserSummaryDto[] = [];\r\n}\r\n","import { IsNumber } from \"class-validator\";\r\n\r\nexport class TaskStatusUpdateDto {\r\n    @IsNumber()\r\n    public statusId: string;\r\n}\r\n","import { UserSummaryDto, ProjectSummaryDto, StatusSummaryDto } from \"@models/dtos\";\r\n\r\nexport class TaskSummaryDto {\r\n    id: number;\r\n    title: string;\r\n    description: string;\r\n    creator: UserSummaryDto;\r\n    project: ProjectSummaryDto;\r\n    status: StatusSummaryDto;\r\n    assignees: UserSummaryDto[] = [];\r\n    comentCount: number = 0;\r\n}\r\n","import { IsString } from 'class-validator';\r\n\r\nexport class TaskUpdateDto {\r\n\r\n  @IsString()\r\n  public title: string;\r\n\r\n  @IsString()\r\n  public description: string;\r\n\r\n}\r\n","import { IsString, IsEmail } from 'class-validator';\r\n\r\nexport class LoginDto {\r\n    @IsEmail()\r\n    public email: string;\r\n\r\n    @IsString()\r\n    public password: string;\r\n}\r\n","import { IsString, IsEmail, Length } from 'class-validator';\r\n\r\nexport class RegisterDto {\r\n\r\n    @Length(2, 20)\r\n    public name: string;\r\n\r\n    @Length(2, 20)\r\n    public surname: string;\r\n\r\n    @Length(5, 20)\r\n    public username: string;\r\n\r\n    @IsEmail()\r\n    public email: string;\r\n\r\n    @IsString()\r\n    public password: string;\r\n\r\n}\r\n","export class UserSummaryDto {\r\n    id: number;\r\n    name: string;\r\n    surname: string;\r\n    username: string;\r\n}\r\n","import { StatusEntity } from '@entities/status.entity';\r\nimport { IssueEntity } from '@entities/issue.entity';\r\nimport { AnswerEntity } from '@entities/answer.entity';\r\nimport { QuestionEntity } from '@entities/question.entity';\r\nimport { CompanyEntity } from '@entities/company.entity';\r\nimport { ProjectEntity } from '@entities/project.entity';\r\nimport { CompanyMembershipEntity } from '@entities/company-membership.entity';\r\nimport { MembershipRequestEntity } from '@entities/membership-request.entity';\r\nimport { ProjectManagerEntity } from '@entities/project-manager.entity';\r\nimport { ProjectMembershipEntity } from '@entities/project-membership.entity';\r\nimport { TaskAssignmentEntity } from '@entities/task-assignment.entity';\r\nimport { TaskEntity } from '@entities/task.entity';\r\nimport { CommentEntity } from '@entities/comment.entity';\r\nimport { UserEntity } from '@entities/user.entity';\r\nimport { LabelEntity } from '@entities/label.entity';\r\nimport { TaskLabelEntity } from '@entities/task-label.entity';\r\n\r\nimport { ConnectionOptions } from \"typeorm\";\r\nimport 'reflect-metadata';\r\n\r\n\r\nexport let dbOptions: ConnectionOptions = {\r\n    type: \"mysql\",\r\n    host: \"localhost\",\r\n    port: 3306,\r\n    username: \"root\",\r\n    password: \"123456\",\r\n    database: \"pyudb\",\r\n    entities: [\r\n        TaskEntity,\r\n        CommentEntity,\r\n        UserEntity,\r\n        ProjectEntity,\r\n        CompanyEntity,\r\n        QuestionEntity,\r\n        AnswerEntity,\r\n        IssueEntity,\r\n        StatusEntity,\r\n        CompanyMembershipEntity,\r\n        MembershipRequestEntity,\r\n        ProjectManagerEntity,\r\n        ProjectMembershipEntity,\r\n        TaskAssignmentEntity,\r\n        LabelEntity,\r\n        TaskLabelEntity\r\n    ],\r\n    synchronize: true,\r\n}\r\n","import { Entity, Column, PrimaryGeneratedColumn, OneToMany, ManyToOne, JoinColumn } from \"typeorm\";\r\nimport { UserEntity } from '@entities/user.entity';\r\nimport { QuestionEntity } from '@entities/question.entity';\r\n@Entity(\"answer\")\r\nexport class AnswerEntity {\r\n\r\n    @PrimaryGeneratedColumn()\r\n    id: number;\r\n\r\n    @Column({\r\n        length: 100\r\n    })\r\n    content: string;\r\n\r\n    @Column(\"int\")\r\n    creatorId: number;\r\n    @ManyToOne(type => UserEntity, user => user.answers)\r\n    @JoinColumn({ name: \"creatorId\" })\r\n    creator: UserEntity;\r\n\r\n    @Column(\"int\")\r\n    questionId: number;\r\n    @ManyToOne(type => QuestionEntity, question => question.answers)\r\n    @JoinColumn({ name: \"questionId\" })\r\n    question: QuestionEntity;\r\n\r\n    @Column()\r\n    createdAt: Date;\r\n\r\n    @Column()\r\n    lastUpdated: Date;\r\n}\r\n","import { TaskEntity } from '@entities/task.entity';\r\nimport { Entity, Column, PrimaryGeneratedColumn, ManyToOne, JoinColumn } from \"typeorm\";\r\nimport { UserEntity } from '@entities/user.entity';\r\n\r\n@Entity(\"comment\")\r\nexport class CommentEntity {\r\n\r\n    @PrimaryGeneratedColumn()\r\n    id: number;\r\n\r\n    @Column({\r\n        length: 400\r\n    })\r\n    content: string;\r\n\r\n    @Column(\"int\")\r\n    taskId: number;\r\n    @ManyToOne(type => TaskEntity, task => task.comments)\r\n    @JoinColumn({ name: \"taskId\" })\r\n    task: TaskEntity;\r\n\r\n    @Column(\"int\")\r\n    userId: number;\r\n    @ManyToOne(type => UserEntity, user => user.comments)\r\n    @JoinColumn({ name: \"userId\" })\r\n    creator: UserEntity;\r\n\r\n    @Column()\r\n    createdAt: Date;\r\n\r\n    @Column()\r\n    lastUpdated: Date;\r\n}\r\n","import { Entity, Column, PrimaryGeneratedColumn, ManyToOne, JoinColumn } from \"typeorm\";\r\nimport { UserEntity } from '@entities/user.entity';\r\nimport { CompanyEntity } from \"@entities/company.entity\";\r\n\r\n@Entity(\"company_membership\")\r\nexport class CompanyMembershipEntity {\r\n\r\n    @PrimaryGeneratedColumn()\r\n    id: number;\r\n\r\n    @Column(\"int\")\r\n    userId: number;\r\n    @ManyToOne(type => UserEntity, user => user.memberships)\r\n    @JoinColumn({ name: \"userId\" })\r\n    user: UserEntity;\r\n\r\n    @Column(\"int\")\r\n    companyId: number;\r\n    @ManyToOne(type => CompanyEntity, company => company.members)\r\n    @JoinColumn({ name: \"companyId\" })\r\n    company: CompanyEntity;\r\n\r\n    @Column(\"datetime\")\r\n    joiningDate: Date;\r\n\r\n    @Column(\"datetime\", { nullable: true })\r\n    leavingDate: Date;\r\n\r\n    @Column(\"int\")\r\n    status: number;\r\n}\r\n","import { Entity, Column, PrimaryGeneratedColumn, OneToMany, ManyToOne, JoinColumn, ManyToMany, JoinTable } from \"typeorm\";\r\nimport { UserEntity } from '@entities/user.entity';\r\nimport { ProjectEntity } from \"@entities/project.entity\";\r\nimport { CompanyMembershipEntity } from \"@entities/company-membership.entity\";\r\nimport { MembershipRequestEntity } from \"@entities/membership-request.entity\";\r\n@Entity(\"company\")\r\nexport class CompanyEntity {\r\n\r\n    @PrimaryGeneratedColumn()\r\n    id: number;\r\n\r\n    @Column({\r\n        length: 100\r\n    })\r\n    name: string;\r\n\r\n    @Column({\r\n        length: 100\r\n    })\r\n    description: string;\r\n\r\n    @OneToMany(type => ProjectEntity, project => project.company)\r\n    projects: ProjectEntity[];\r\n\r\n    @OneToMany(type => CompanyMembershipEntity, cmem => cmem.company)\r\n    members: CompanyMembershipEntity[];\r\n\r\n    @OneToMany(type => MembershipRequestEntity, msr => msr.company)\r\n    requestsSent: MembershipRequestEntity[];\r\n\r\n    @Column(\"int\")\r\n    ownerId: number;\r\n    @ManyToOne(type => UserEntity, user => user.ownedCompanies)\r\n    @JoinColumn({ name: \"ownerId\" })\r\n    owner: UserEntity;\r\n\r\n    @Column()\r\n    createdAt: Date;\r\n\r\n    @Column()\r\n    lastUpdated: Date;\r\n}\r\n","import { ProjectEntity } from '@entities/project.entity';\r\nimport { Entity, Column, PrimaryGeneratedColumn, OneToMany, ManyToOne, JoinColumn } from \"typeorm\";\r\nimport { UserEntity } from '@entities/user.entity';\r\nimport { TaskEntity } from '@entities/task.entity';\r\n@Entity(\"issue\")\r\nexport class IssueEntity {\r\n\r\n    @PrimaryGeneratedColumn()\r\n    id: number;\r\n\r\n    @Column({\r\n        length: 100\r\n    })\r\n    title: string;\r\n\r\n    @Column({\r\n        length: 100\r\n    })\r\n    description: string;\r\n\r\n    @OneToMany(type => TaskEntity, task => task.fromIssue)\r\n    tasks: TaskEntity[];\r\n\r\n    @Column(\"int\")\r\n    creatorId: number;\r\n    @ManyToOne(type => UserEntity, user => user.createdIssues)\r\n    @JoinColumn({ name: \"creatorId\" })\r\n    creator: UserEntity;\r\n\r\n    @Column(\"int\")\r\n    projectId: number;\r\n    @ManyToOne(type => ProjectEntity, project => project.issues)\r\n    @JoinColumn({ name: \"projectId\" })\r\n    project: ProjectEntity;\r\n\r\n    @Column()\r\n    createdAt: Date;\r\n\r\n    @Column()\r\n    lastUpdated: Date;\r\n}\r\n","import { Entity, Column, PrimaryGeneratedColumn, OneToMany } from \"typeorm\";\r\nimport { TaskLabelEntity } from './task-label.entity';\r\n@Entity(\"label\")\r\nexport class LabelEntity {\r\n\r\n    @PrimaryGeneratedColumn()\r\n    id: number;\r\n\r\n    @Column({\r\n        length: 15\r\n    })\r\n    name: string;\r\n\r\n    @OneToMany(type => TaskLabelEntity, tsklbl => tsklbl.label)\r\n    relatedTasks: TaskLabelEntity[];\r\n\r\n    @Column()\r\n    createdAt: Date;\r\n}\r\n","import { Entity, Column, PrimaryGeneratedColumn, ManyToOne, JoinColumn } from \"typeorm\";\r\nimport { UserEntity } from '@entities/user.entity';\r\nimport { CompanyEntity } from \"@entities/company.entity\";\r\n\r\n@Entity(\"membership_request\")\r\nexport class MembershipRequestEntity {\r\n\r\n    @PrimaryGeneratedColumn()\r\n    id: number;\r\n\r\n    @Column(\"int\")\r\n    userId: number;\r\n    @ManyToOne(type => UserEntity, user => user.companyRequests)\r\n    @JoinColumn({ name: \"userId\" })\r\n    user: UserEntity;\r\n\r\n    @Column(\"int\")\r\n    companyId: number;\r\n    @ManyToOne(type => CompanyEntity, company => company.requestsSent)\r\n    @JoinColumn({ name: \"companyId\" })\r\n    company: CompanyEntity;\r\n\r\n    @Column()\r\n    createdAt: Date;\r\n\r\n}\r\n","import { Entity, Column, PrimaryGeneratedColumn, ManyToOne, JoinColumn } from \"typeorm\";\r\nimport { UserEntity } from '@entities/user.entity';\r\nimport { ProjectEntity } from \"@entities/project.entity\";\r\n\r\n@Entity(\"project_manager\")\r\nexport class ProjectManagerEntity {\r\n\r\n    @PrimaryGeneratedColumn()\r\n    id: number;\r\n\r\n    @Column(\"int\")\r\n    userId: number;\r\n    @ManyToOne(type => UserEntity, user => user.managedProjects)\r\n    @JoinColumn({ name: \"userId\" })\r\n    user: UserEntity;\r\n\r\n    @Column(\"int\")\r\n    projectId: number;\r\n    @ManyToOne(type => ProjectEntity, prj => prj.managers)\r\n    @JoinColumn({ name: \"projectId\" })\r\n    project: ProjectEntity;\r\n\r\n    @Column()\r\n    createdAt: Date;\r\n\r\n}\r\n","import { Entity, Column, PrimaryGeneratedColumn, ManyToOne, JoinColumn } from \"typeorm\";\r\nimport { UserEntity } from '@entities/user.entity';\r\nimport { ProjectEntity } from \"@entities/project.entity\";\r\n\r\n@Entity(\"project_membership\")\r\nexport class ProjectMembershipEntity {\r\n\r\n    @PrimaryGeneratedColumn()\r\n    id: number;\r\n\r\n    @Column(\"int\")\r\n    userId: number;\r\n    @ManyToOne(type => UserEntity, user => user.projects)\r\n    @JoinColumn({ name: \"userId\" })\r\n    user: UserEntity;\r\n\r\n    @Column(\"int\")\r\n    projectId: number;\r\n    @ManyToOne(type => ProjectEntity, prj => prj.managers)\r\n    @JoinColumn({ name: \"projectId\" })\r\n    project: ProjectEntity;\r\n\r\n    @Column()\r\n    createdAt: Date;\r\n\r\n}\r\n","import { IssueEntity } from '@entities/issue.entity';\r\nimport { Entity, Column, PrimaryGeneratedColumn, OneToMany, ManyToOne, JoinColumn, ManyToMany, JoinTable, OneToOne } from \"typeorm\";\r\nimport { UserEntity } from '@entities/user.entity';\r\nimport { TaskEntity } from \"@entities/task.entity\";\r\nimport { CompanyEntity } from \"@entities/company.entity\";\r\nimport { StatusEntity } from \"@entities/status.entity\";\r\nimport { ProjectManagerEntity } from '@entities/project-manager.entity';\r\nimport { ProjectMembershipEntity } from '@entities/project-membership.entity';\r\n@Entity(\"project\")\r\nexport class ProjectEntity {\r\n\r\n  @PrimaryGeneratedColumn()\r\n  id: number;\r\n\r\n  @Column({\r\n    length: 100\r\n  })\r\n  title: string;\r\n\r\n  @Column({\r\n    length: 100\r\n  })\r\n  description: string;\r\n\r\n  @Column()\r\n  isSubProject: boolean;\r\n\r\n  @OneToOne(type => TaskEntity, task => task.subProject)\r\n  assignedTask: TaskEntity;\r\n\r\n  @OneToMany(type => TaskEntity, task => task.project)\r\n  tasks: TaskEntity[];\r\n\r\n  @OneToMany(type => StatusEntity, status => status.project)\r\n  statuses: StatusEntity[];\r\n\r\n  @OneToMany(type => IssueEntity, issue => issue.project)\r\n  issues: IssueEntity[];\r\n\r\n  @Column(\"int\")\r\n  companyId: number;\r\n  @ManyToOne(type => CompanyEntity, company => company.projects)\r\n  @JoinColumn({ name: \"companyId\" })\r\n  company: CompanyEntity;\r\n\r\n  @Column(\"int\")\r\n  userId: number;\r\n  @ManyToOne(type => UserEntity, user => user.createdProjects)\r\n  @JoinColumn({ name: \"userId\" })\r\n  creator: UserEntity;\r\n\r\n  @Column()\r\n  createdAt: Date;\r\n\r\n  @Column()\r\n  lastUpdated: Date;\r\n\r\n  @OneToMany(type => ProjectMembershipEntity, pms => pms.project)\r\n  members: ProjectMembershipEntity[];\r\n\r\n  @OneToMany(type => ProjectManagerEntity, prm => prm.project)\r\n  managers: ProjectManagerEntity[];\r\n}\r\n","import { ProjectEntity } from '@entities/project.entity';\r\nimport { Entity, Column, PrimaryGeneratedColumn, OneToMany, ManyToOne, JoinColumn } from \"typeorm\";\r\nimport { UserEntity } from '@entities/user.entity';\r\nimport { AnswerEntity } from '@entities/answer.entity';\r\n@Entity(\"question\")\r\nexport class QuestionEntity {\r\n\r\n    @PrimaryGeneratedColumn()\r\n    id: number;\r\n\r\n    @Column({\r\n        length: 100\r\n    })\r\n    title: string;\r\n\r\n    @Column({\r\n        length: 100\r\n    })\r\n    content: string;\r\n\r\n    @OneToMany(type => AnswerEntity, answer => answer.question)\r\n    answers: AnswerEntity[];\r\n\r\n    @Column(\"int\")\r\n    creatorId: number;\r\n    @ManyToOne(type => UserEntity, user => user.questions)\r\n    @JoinColumn({ name: \"creatorId\" })\r\n    creator: UserEntity;\r\n\r\n    @Column(\"int\")\r\n    projectId: number;\r\n    @ManyToOne(type => ProjectEntity, project => project.tasks)\r\n    @JoinColumn({ name: \"projectId\" })\r\n    project: ProjectEntity;\r\n\r\n    @Column()\r\n    createdAt: Date;\r\n\r\n    @Column()\r\n    lastUpdated: Date;\r\n}\r\n","import { TaskEntity } from '@entities/task.entity';\r\nimport { ProjectEntity } from '@entities/project.entity';\r\nimport { Entity, Column, PrimaryGeneratedColumn, OneToMany, ManyToOne, JoinColumn } from \"typeorm\";\r\nimport { UserEntity } from '@entities/user.entity';\r\n@Entity(\"status\")\r\nexport class StatusEntity {\r\n\r\n    @PrimaryGeneratedColumn()\r\n    id: number;\r\n\r\n    @Column({\r\n        length: 100\r\n    })\r\n    title: string;\r\n\r\n    @Column({\r\n        length: 100\r\n    })\r\n    description: string;\r\n\r\n    @Column(\"int\")\r\n    baseStatus: number;\r\n\r\n    @Column(\"int\")\r\n    order: number;\r\n\r\n    @OneToMany(type => TaskEntity, task => task.status)\r\n    tasks: TaskEntity[];\r\n\r\n    @Column(\"int\")\r\n    creatorId: number;\r\n    @ManyToOne(type => UserEntity, user => user.createdStatuses)\r\n    @JoinColumn({ name: \"creatorId\" })\r\n    creator: UserEntity;\r\n\r\n    @Column(\"int\")\r\n    projectId: number;\r\n    @ManyToOne(type => ProjectEntity, project => project.statuses)\r\n    @JoinColumn({ name: \"projectId\" })\r\n    project: ProjectEntity;\r\n\r\n    @Column()\r\n    createdAt: Date;\r\n\r\n    @Column()\r\n    lastUpdated: Date;\r\n}\r\n","import { Entity, Column, PrimaryGeneratedColumn, ManyToOne, JoinColumn } from \"typeorm\";\r\nimport { UserEntity } from '@entities/user.entity';\r\nimport { TaskEntity } from \"@entities/task.entity\";\r\n\r\n@Entity(\"task_assignment\")\r\nexport class TaskAssignmentEntity {\r\n\r\n    @PrimaryGeneratedColumn()\r\n    id: number;\r\n\r\n    @Column(\"int\")\r\n    userId: number;\r\n    @ManyToOne(type => UserEntity, user => user.taskAssignments)\r\n    @JoinColumn({ name: \"userId\" })\r\n    user: UserEntity;\r\n\r\n    @Column(\"int\")\r\n    taskId: number;\r\n    @ManyToOne(type => TaskEntity, tsk => tsk.assignees)\r\n    @JoinColumn({ name: \"taskId\" })\r\n    task: TaskEntity;\r\n\r\n    @Column()\r\n    createdAt: Date;\r\n\r\n}\r\n","import { Entity, Column, PrimaryGeneratedColumn, ManyToOne, JoinColumn } from \"typeorm\";\r\nimport { TaskEntity } from \"@entities/task.entity\";\r\nimport { LabelEntity } from \"./label.entity\";\r\n\r\n@Entity(\"task_label\")\r\nexport class TaskLabelEntity {\r\n\r\n    @PrimaryGeneratedColumn()\r\n    id: number;\r\n\r\n    @Column(\"int\")\r\n    taskId: number;\r\n    @ManyToOne(type => TaskEntity, task => task.relatedLabels)\r\n    @JoinColumn({ name: \"taskId\" })\r\n    task: TaskEntity;\r\n\r\n    @Column(\"int\")\r\n    labelId: number;\r\n    @ManyToOne(type => LabelEntity, lbl => lbl.relatedTasks)\r\n    @JoinColumn({ name: \"labelId\" })\r\n    label: TaskEntity;\r\n\r\n    @Column()\r\n    createdAt: Date;\r\n\r\n}\r\n","import { IssueEntity } from '@entities/issue.entity';\r\nimport { ProjectEntity } from '@entities/project.entity';\r\nimport { Entity, Column, PrimaryGeneratedColumn, OneToMany, ManyToOne, JoinColumn, ManyToMany, JoinTable, OneToOne } from \"typeorm\";\r\nimport { CommentEntity } from '@entities/comment.entity';\r\nimport { UserEntity } from '@entities/user.entity';\r\nimport { StatusEntity } from '@entities/status.entity';\r\nimport { TaskAssignmentEntity } from '@entities/task-assignment.entity';\r\nimport { TaskLabelEntity } from './task-label.entity';\r\n@Entity(\"task\")\r\nexport class TaskEntity {\r\n\r\n  @PrimaryGeneratedColumn()\r\n  id: number;\r\n\r\n  @Column({\r\n    length: 100\r\n  })\r\n  title: string;\r\n\r\n  @Column({\r\n    length: 100\r\n  })\r\n  description: string;\r\n\r\n  @Column(\"int\")\r\n  type: number;\r\n\r\n  @Column(\"int\")\r\n  code: number;\r\n\r\n  @Column(\"int\")\r\n  priority: number;\r\n\r\n  @Column(\"int\", { nullable: true })\r\n  subProjectId: number;\r\n  @OneToOne(type => ProjectEntity, project => project.assignedTask)\r\n  @JoinColumn({ name: \"subProjectId\" })\r\n  subProject: ProjectEntity;\r\n\r\n  @OneToMany(type => CommentEntity, comment => comment.task)\r\n  comments: CommentEntity[];\r\n\r\n  @Column(\"int\")\r\n  creatorId: number;\r\n  @ManyToOne(type => UserEntity, user => user.createdTasks)\r\n  @JoinColumn({ name: \"creatorId\" })\r\n  creator: UserEntity;\r\n\r\n  @Column(\"int\")\r\n  projectId: number;\r\n  @ManyToOne(type => ProjectEntity, project => project.tasks)\r\n  @JoinColumn({ name: \"projectId\" })\r\n  project: ProjectEntity;\r\n\r\n  @Column(\"int\")\r\n  statusId: number;\r\n  @ManyToOne(type => StatusEntity, status => status.tasks)\r\n  @JoinColumn({ name: \"statusId\" })\r\n  status: StatusEntity;\r\n\r\n  @Column(\"int\", { nullable: true })\r\n  fromIssueId: number;\r\n  @ManyToOne(type => IssueEntity, issue => issue.tasks)\r\n  @JoinColumn({ name: \"fromIssueId\" })\r\n  fromIssue: IssueEntity;\r\n\r\n  @OneToMany(type => TaskAssignmentEntity, tsa => tsa.task)\r\n  assignees: TaskAssignmentEntity[];\r\n\r\n  @OneToMany(type => TaskLabelEntity, tsklbl => tsklbl.task)\r\n  relatedLabels: TaskLabelEntity[];\r\n\r\n  @Column()\r\n  createdAt: Date;\r\n\r\n  @Column()\r\n  lastUpdated: Date;\r\n}\r\n","import { IssueEntity } from '@entities/issue.entity';\r\nimport { CommentEntity } from '@entities/comment.entity';\r\nimport { QuestionEntity } from '@entities/question.entity';\r\nimport { CompanyEntity } from '@entities/company.entity';\r\nimport { TaskEntity } from '@entities/task.entity';\r\nimport { Entity, Column, PrimaryGeneratedColumn, OneToMany } from \"typeorm\";\r\nimport { ProjectEntity } from '@entities/project.entity';\r\nimport { AnswerEntity } from '@entities/answer.entity';\r\nimport { StatusEntity } from '@entities/status.entity';\r\nimport { ProjectManagerEntity } from '@entities/project-manager.entity';\r\nimport { MembershipRequestEntity } from '@entities/membership-request.entity';\r\nimport { ProjectMembershipEntity } from '@entities/project-membership.entity';\r\nimport { TaskAssignmentEntity } from '@entities/task-assignment.entity';\r\nimport { CompanyMembershipEntity } from '@entities/company-membership.entity';\r\n\r\n@Entity(\"user\")\r\nexport class UserEntity {\r\n\r\n    @PrimaryGeneratedColumn()\r\n    id: number;\r\n\r\n    @Column({\r\n        length: 100\r\n    })\r\n    name: string;\r\n\r\n    @Column({\r\n        length: 100\r\n    })\r\n    surname: string;\r\n\r\n    @Column({\r\n        length: 100\r\n    })\r\n    username: string;\r\n\r\n    @Column({\r\n        length: 100\r\n    })\r\n    email: string;\r\n\r\n    @Column({\r\n        length: 100\r\n    })\r\n    password: string;\r\n\r\n    @Column()\r\n    createdAt: Date;\r\n\r\n    @Column()\r\n    lastUpdated: Date;\r\n\r\n    @OneToMany(type => TaskEntity, task => task.creator)\r\n    createdTasks: TaskEntity[];\r\n\r\n    @OneToMany(type => ProjectEntity, project => project.creator)\r\n    createdProjects: ProjectEntity[];\r\n\r\n    @OneToMany(type => CompanyEntity, company => company.owner)\r\n    ownedCompanies: CompanyEntity[];\r\n\r\n    @OneToMany(type => QuestionEntity, question => question.creator)\r\n    questions: QuestionEntity[];\r\n\r\n    @OneToMany(type => AnswerEntity, answer => answer.creator)\r\n    answers: AnswerEntity[];\r\n\r\n    @OneToMany(type => CommentEntity, comment => comment.creator)\r\n    comments: AnswerEntity[];\r\n\r\n    @OneToMany(type => IssueEntity, issue => issue.creator)\r\n    createdIssues: IssueEntity[];\r\n\r\n    @OneToMany(type => StatusEntity, status => status.creator)\r\n    createdStatuses: StatusEntity[];\r\n\r\n    @OneToMany(type => CompanyMembershipEntity, cmem => cmem.user)\r\n    memberships: CompanyMembershipEntity[];\r\n\r\n    @OneToMany(type => MembershipRequestEntity, msr => msr.user)\r\n    companyRequests: MembershipRequestEntity[];\r\n\r\n    @OneToMany(type => ProjectMembershipEntity, pms => pms.user)\r\n    projects: ProjectMembershipEntity[];\r\n\r\n    @OneToMany(type => ProjectManagerEntity, pmn => pmn.user)\r\n    managedProjects: ProjectManagerEntity[];\r\n\r\n    @OneToMany(type => TaskAssignmentEntity, tsa => tsa.user)\r\n    taskAssignments: TaskAssignmentEntity[];\r\n\r\n}\r\n","export enum BaseStatus {\r\n    PLANNINING = 0,\r\n    NOT_STARTED = 1,\r\n    IN_PROGRESS = 2,\r\n    FINISHED = 3\r\n}","export enum TaskTypes {\r\n  BASIC = 0,\r\n  SUBPROJECT = 1\r\n}\r\n","import { Container } from \"inversify\";\r\nimport { SeedDatabase } from \"./seed\";\r\nimport { IAnswerRepository, ICommentRepository, ITaskRepository, IProjectRepository, IIssueRepository, ICompanyRepository, IQuestionRepository, IStatusRepository, IUserRepository } from \"@repositories/abstract\";\r\nimport { AnswerRepository, CommentRepository, CompanyRepository, TaskRepository, UserRepository, IssueRepository, ProjectRepository, QuestionRepository, StatusRepository } from \"@repositories/concrete\";\r\nimport { InjectTypes } from \"./inject-types\";\r\nimport 'reflect-metadata';\r\nexport module DBIOC {\r\n    export const container = new Container();\r\n    export function configureContainer(): Container {\r\n\r\n        container\r\n            .bind<SeedDatabase>(SeedDatabase)\r\n            .toSelf()\r\n\r\n        container\r\n            .bind<IAnswerRepository>(InjectTypes.Repository.ANSWER)\r\n            .to(AnswerRepository);\r\n\r\n        container\r\n            .bind<ICommentRepository>(InjectTypes.Repository.COMMENT)\r\n            .to(CommentRepository);\r\n\r\n        container\r\n            .bind<ICompanyRepository>(InjectTypes.Repository.COMPANY)\r\n            .to(CompanyRepository);\r\n\r\n        container\r\n            .bind<IIssueRepository>(InjectTypes.Repository.ISSUE)\r\n            .to(IssueRepository);\r\n\r\n        container\r\n            .bind<IProjectRepository>(InjectTypes.Repository.PROJECT)\r\n            .to(ProjectRepository);\r\n\r\n        container\r\n            .bind<IQuestionRepository>(InjectTypes.Repository.QUESTION)\r\n            .to(QuestionRepository);\r\n\r\n        container\r\n            .bind<IStatusRepository>(InjectTypes.Repository.STATUS)\r\n            .to(StatusRepository);\r\n\r\n\r\n        container\r\n            .bind<ITaskRepository>(InjectTypes.Repository.TASK)\r\n            .to(TaskRepository);\r\n\r\n        container\r\n            .bind<IUserRepository>(InjectTypes.Repository.USER)\r\n            .to(UserRepository);\r\n\r\n        return container;\r\n    }\r\n}\r\n","import { SeedDatabase } from './seed';\r\nimport 'reflect-metadata';\r\nimport { DBIOC } from './container';\r\n\r\nconsole.log(\"veritabanı seedle çalıştırıldı.\");\r\n\r\nDBIOC.configureContainer();\r\nconst seedDatabase = DBIOC.container.get(SeedDatabase);\r\n\r\nseedDatabase.initialize();\r\n","export module InjectTypes {\r\n    export enum Repository {\r\n        ANSWER = 'AnswerRepository',\r\n        COMMENT = 'CommentRepository',\r\n        COMPANY = 'CompanyRepository',\r\n        ISSUE = 'IssueRepository',\r\n        PROJECT = 'ProjectRepository',\r\n        QUESTION = 'QuestionRepository',\r\n        STATUS = 'StatusRepository',\r\n        TASK = 'TaskRepository',\r\n        USER = 'UserRepository'\r\n    }\r\n\r\n    export enum Service {\r\n        ANSWER = 'AnswerService',\r\n        COMMENT = 'CommentService',\r\n        COMPANY = 'CompanyService',\r\n        ISSUE = 'IssueService',\r\n        PROJECT = 'ProjectService',\r\n        QUESTION = 'QuestionService',\r\n        TASK = 'TaskService',\r\n        USER = 'UserService'\r\n    }\r\n\r\n}\r\n","import { ProjectEntity } from './../entities/project.entity';\r\nimport { CompanyEntity } from './../entities/company.entity';\r\nimport { injectable, inject } from \"inversify\";\r\nimport { createConnection } from \"typeorm\";\r\nimport * as appConfig from \"./../common/app-config\";\r\nimport { IUserRepository, ICompanyRepository, IStatusRepository, IProjectRepository, ITaskRepository } from \"./../@repository/abstract\";\r\nimport * as faker from 'faker';\r\nimport { RegisterDto } from \"./../_models/dtos\";\r\nimport { UserEntity } from \"./../entities/user.entity\";\r\nimport { StatusEntity } from '../entities/status.entity';\r\nimport { BaseStatus } from '../enums/base-status.enum';\r\n\r\nimport { InjectTypes } from './inject-types';\r\nimport { TaskEntity } from \"./../entities/task.entity\";\r\nimport 'module-alias/register';\r\nimport { TaskTypes } from '@enums/task-types.enum';\r\n\r\n@injectable()\r\nexport class SeedDatabase {\r\n  constructor(\r\n    @inject(InjectTypes.Repository.USER) private readonly _userRepository: IUserRepository,\r\n    @inject(InjectTypes.Repository.COMPANY) private readonly _companyRepository: ICompanyRepository,\r\n    @inject(InjectTypes.Repository.STATUS) private readonly _statusRepository: IStatusRepository,\r\n    @inject(InjectTypes.Repository.PROJECT) private readonly _projectRepository: IProjectRepository,\r\n    @inject(InjectTypes.Repository.TASK) private readonly _taskRepository: ITaskRepository,\r\n\r\n  ) { }\r\n\r\n  public initialize() {\r\n    createConnection(appConfig.dbOptions).then(async connection => {\r\n      console.log(__dirname);\r\n      console.log(\"Connected to DB\");\r\n      this.seed();\r\n    }).catch(error => console.log(\"TypeORM connection error: \", error));\r\n  }\r\n\r\n  public seed() {\r\n    const USERCOUNT = 50;\r\n    const COMPANYCOUNT = 10;\r\n    const PROJECTCOUNT = 25;\r\n    const TASKCOUNT = 500;\r\n    let users: UserEntity[] = [];\r\n    let companies: CompanyEntity[] = [];\r\n    let projects: ProjectEntity[] = [];\r\n    let tasks: TaskEntity[] = [];\r\n\r\n    let userPromises = [];\r\n    let companyPromises = [];\r\n    let projectPromises = [];\r\n    let statusPromises = [];\r\n    let taskPromises = [];\r\n    let grkn: UserEntity;\r\n\r\n    for (let i = 0; i < USERCOUNT; i++) {\r\n      let usrDto: RegisterDto = Object.assign(new RegisterDto(), {\r\n        name: faker.name.firstName(),\r\n        surname: faker.name.lastName(),\r\n        username: faker.internet.userName(),\r\n        email: faker.internet.email(),\r\n        password: 'Password123.',\r\n        createdAt: new Date(),\r\n        lastUpdated: new Date()\r\n      });\r\n      let user: UserEntity = Object.assign(new UserEntity(), usrDto);\r\n      users.push(user);\r\n      userPromises.push(this._userRepository.insert(users[i]));\r\n    }\r\n\r\n    let grknDto: RegisterDto = Object.assign(new RegisterDto(), {\r\n      name: 'gurkan',\r\n      surname: 'demirlerli',\r\n      username: 'gurkan30',\r\n      email: 'gurkan@example.com',\r\n      password: 'Password123.',\r\n      createdAt: new Date(),\r\n      lastUpdated: new Date()\r\n    });\r\n    grkn = Object.assign(new UserEntity(), grknDto);\r\n    users.push(grkn);\r\n    userPromises.push(this._userRepository.insert(grkn));\r\n\r\n    Promise.all(userPromises).then((createdUsers) => {\r\n      console.log('Kullanicilar Eklendi');\r\n      users = createdUsers;\r\n\r\n      grkn = createdUsers.find(x => x.name === \"gurkan\");\r\n\r\n      for (let i = 0; i < COMPANYCOUNT; i++) {\r\n        let ind = Math.floor(Math.random() * (USERCOUNT));\r\n        let cmp: CompanyEntity = Object.assign(new CompanyEntity(), {\r\n          name: faker.name.lastName(),\r\n          description: faker.lorem.words(4),\r\n          ownerId: users[ind].id,\r\n          createdAt: new Date(),\r\n          lastUpdated: new Date()\r\n        });\r\n        companyPromises.push(this._companyRepository.insert(cmp));\r\n      }\r\n\r\n      let c1: CompanyEntity = Object.assign(new CompanyEntity(), {\r\n        name: faker.name.lastName(),\r\n        description: faker.lorem.words(4),\r\n        ownerId: grkn.id,\r\n        createdAt: new Date(),\r\n        lastUpdated: new Date()\r\n      });\r\n      companyPromises.push(this._companyRepository.insert(c1));\r\n\r\n      let c2: CompanyEntity = Object.assign(new CompanyEntity(), {\r\n        name: faker.name.lastName(),\r\n        description: faker.lorem.words(4),\r\n        ownerId: grkn.id,\r\n        createdAt: new Date(),\r\n        lastUpdated: new Date()\r\n      });\r\n      companyPromises.push(this._companyRepository.insert(c2));\r\n      return Promise.all(companyPromises);\r\n    }).then((createdCompanies) => {\r\n      console.log('Sirketler Eklendi');\r\n\r\n      companies = createdCompanies;\r\n      grkn.ownedCompanies = companies.filter(x => x.ownerId === grkn.id);\r\n\r\n      for (let i = 0; i < PROJECTCOUNT; i++) {\r\n        let ind = Math.floor(Math.random() * (COMPANYCOUNT));\r\n        let prj: ProjectEntity = Object.assign(new ProjectEntity(), {\r\n          userId: companies[ind].ownerId,\r\n          title: faker.name.jobTitle(),\r\n          description: faker.lorem.words(4),\r\n          companyId: companies[ind].id,\r\n          createdAt: new Date(),\r\n          lastUpdated: new Date(),\r\n          isSubProject: false\r\n        });\r\n        projectPromises.push(this._projectRepository.insert(prj));\r\n      }\r\n\r\n      let p1: ProjectEntity = Object.assign(new ProjectEntity(), {\r\n        userId: grkn.id,\r\n        title: faker.name.jobTitle(),\r\n        description: faker.lorem.words(4),\r\n        companyId: grkn.ownedCompanies[0],\r\n        createdAt: new Date(),\r\n        lastUpdated: new Date(),\r\n        isSubProject: false\r\n\r\n      });\r\n      projectPromises.push(this._projectRepository.insert(p1));\r\n\r\n      let p2: ProjectEntity = Object.assign(new ProjectEntity(), {\r\n        userId: grkn.id,\r\n        title: faker.name.jobTitle(),\r\n        description: faker.lorem.words(4),\r\n        companyId: grkn.ownedCompanies[0].id,\r\n        createdAt: new Date(),\r\n        lastUpdated: new Date(),\r\n        isSubProject: false\r\n\r\n      });\r\n      projectPromises.push(this._projectRepository.insert(p2));\r\n\r\n      let p3: ProjectEntity = Object.assign(new ProjectEntity(), {\r\n        userId: grkn.id,\r\n        title: faker.name.jobTitle(),\r\n        description: faker.lorem.words(4),\r\n        companyId: grkn.ownedCompanies[1].id,\r\n        createdAt: new Date(),\r\n        lastUpdated: new Date(),\r\n        isSubProject: false\r\n\r\n      });\r\n      projectPromises.push(this._projectRepository.insert(p3));\r\n\r\n      return Promise.all(projectPromises);\r\n    }).then((createdProjects) => {\r\n      console.log('Projeler Eklendi');\r\n\r\n      projects = createdProjects;\r\n\r\n      for (let i = 0; i < projects.length; i++) {\r\n        projects[i].statuses = [];\r\n        let status0: StatusEntity = Object.assign(new StatusEntity(), {\r\n          title: 'Planning',\r\n          description: 'Proje sürecine dahil olabilecek görevler',\r\n          baseStatus: BaseStatus.PLANNINING,\r\n          order: 0,\r\n          creatorId: projects[i].userId,\r\n          projectId: projects[i].id,\r\n          createdAt: new Date(),\r\n          lastUpdated: new Date()\r\n        });\r\n        let status1: StatusEntity = Object.assign(new StatusEntity(), {\r\n          title: 'To do',\r\n          description: 'Proje sürecinde olan ama henüz baslanmamis görevler',\r\n          baseStatus: BaseStatus.NOT_STARTED,\r\n          order: 0,\r\n          creatorId: projects[i].userId,\r\n          projectId: projects[i].id,\r\n          createdAt: new Date(),\r\n          lastUpdated: new Date()\r\n        });\r\n        let status2: StatusEntity = Object.assign(new StatusEntity(), {\r\n          title: 'In Progress',\r\n          description: 'Yapılmakta olan görevler',\r\n          baseStatus: BaseStatus.IN_PROGRESS,\r\n          order: 0,\r\n          creatorId: projects[i].userId,\r\n          projectId: projects[i].id,\r\n          createdAt: new Date(),\r\n          lastUpdated: new Date()\r\n        });\r\n        let status3: StatusEntity = Object.assign(new StatusEntity(), {\r\n          title: 'Done',\r\n          description: 'Bitmiş görevler',\r\n          baseStatus: BaseStatus.FINISHED,\r\n          order: 0,\r\n          creatorId: projects[i].userId,\r\n          projectId: projects[i].id,\r\n          createdAt: new Date(),\r\n          lastUpdated: new Date()\r\n        });\r\n        statusPromises.push(this._statusRepository.insert(status0));\r\n        statusPromises.push(this._statusRepository.insert(status1));\r\n        statusPromises.push(this._statusRepository.insert(status2));\r\n        statusPromises.push(this._statusRepository.insert(status3));\r\n      }\r\n\r\n      return Promise.all(statusPromises);\r\n    }).then((statuses) => {\r\n      console.log('Durumlar Eklendi');\r\n\r\n      for (let i = 0; i < statuses.length; i++) {\r\n        const st = statuses[i];\r\n        projects.map((prj) => {\r\n          if (st.projectId === prj.id) {\r\n            prj.statuses.push(st);\r\n          }\r\n        })\r\n      }\r\n      console.log(\"Projeler tamamen eklendi\");\r\n\r\n      grkn.ownedCompanies.map((cmp) => {\r\n        cmp.projects = projects.filter(prj => prj.companyId === cmp.id);\r\n      });\r\n      let code = 1;\r\n      for (let i = 0; i < TASKCOUNT; i++) {\r\n        let ind = Math.floor(Math.random() * (PROJECTCOUNT));\r\n        let prio = Math.floor(Math.random() * 9);\r\n        let stind = Math.floor(Math.random() * (3));\r\n        let tsk: TaskEntity = Object.assign(new TaskEntity(), {\r\n          creatorId: projects[ind].userId,\r\n          title: faker.name.jobTitle(),\r\n          description: faker.lorem.words(4),\r\n          projectId: projects[ind].id,\r\n          statusId: projects[ind].statuses[stind],\r\n          createdAt: new Date(),\r\n          lastUpdated: new Date(),\r\n          code: code,\r\n          type: TaskTypes.BASIC,\r\n          priority: prio\r\n\r\n        });\r\n        code++;\r\n        taskPromises.push(this._taskRepository.insert(tsk));\r\n      }\r\n\r\n      grkn.ownedCompanies.map((cmp) => {\r\n        cmp.projects.map((prj) => {\r\n          let code = 1;\r\n          for (let i = 0; i < 5; i++) {\r\n            let prio = Math.floor(Math.random() * 9);\r\n            let stind = Math.floor(Math.random() * (3));\r\n            let tsk: TaskEntity = Object.assign(new TaskEntity(), {\r\n              creatorId: grkn.id,\r\n              title: faker.name.jobTitle(),\r\n              description: faker.lorem.words(4),\r\n              projectId: prj.id,\r\n              statusId: prj.statuses[stind],\r\n              createdAt: new Date(),\r\n              lastUpdated: new Date(),\r\n              code: code,\r\n              type: TaskTypes.BASIC,\r\n              priority: prio\r\n            });\r\n            code++;\r\n            taskPromises.push(this._taskRepository.insert(tsk));\r\n          }\r\n        });\r\n      });\r\n\r\n      grkn.ownedCompanies.map((cmp) => {\r\n        cmp.projects.map((prj) => {\r\n          for (let i = 0; i < 10; i++) {\r\n\r\n          }\r\n        })\r\n      })\r\n\r\n      return Promise.all(taskPromises);\r\n    }).then((createdTasks) => {\r\n      console.log('Tasklar Eklendi');\r\n      tasks = createdTasks;\r\n      process.exit(0);\r\n    }).catch((err) => {\r\n      console.log(err);\r\n    })\r\n\r\n\r\n  }\r\n}\r\n","module.exports = require(\"class-validator\");","module.exports = require(\"faker\");","module.exports = require(\"inversify\");","module.exports = require(\"module-alias/register\");","module.exports = require(\"reflect-metadata\");","module.exports = require(\"typeorm\");"],"sourceRoot":""}